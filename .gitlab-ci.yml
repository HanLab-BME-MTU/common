# Gitlab CI Script for danuser/common
# Andrew R. Jamieson - 2016


stages:
  - unit
  - build
  - test
  - deploy
  # - doc

variables:
  USER_HOME: "/home2/s170480"
  USER_MATLAB_HOME: "${USER_HOME}/matlab/"
  CLEAN_REPO_PATH: "${USER_HOME}/matlab/xUnit/git/"
  CI_SCRIPT_PATH: "${CLEAN_REPO_PATH}/ci-scripts/"
  
before_script:
  - pwd
  - date
  - uname -a
  - module load python
  - module unload matlab
  - module list
  - cd $CLEAN_REPO_PATH/ci-scripts
  - git checkout master
  - git pull 
  - cd $CI_PROJECT_DIR
  - $CLEAN_REPO_PATH/ci-scripts/setup_gitlabCI.sh
 
 # === Unit Tests ======================= 
unit:R2016a:
  stage: unit
  script: 
    - module unload matlab
    - module load matlab/2016a
    - echo "-Xmx1024m" > java.opts
    - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch ee, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end "; 

# unit:R2015b:
#   stage: unit
#   script: 
#     - module unload matlab
#     - module load matlab/2015b
#     - echo "-Xmx1024m" > java.opts
#     - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch ee, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end ";
#   only:
#     - master

# unit:R2015a:
#   stage: unit
#   script: 
#     - module unload matlab
#     - module load matlab/2015a
#     - echo "-Xmx1024m" > java.opts
#     - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); exit(2); end ";
#   only:
#     - master

# unit:R2014b:
#   stage: unit
#   script: 
#     - module unload matlab
#     - module load matlab/2014b
#     - echo "-Xmx1024m" > java.opts
#     - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); exit(2); end ";
#   only:
#     - master

# unit:R2014a:
#   stage: unit
#   script: 
#     - module unload matlab
#     - module load matlab/2014a
#     - echo "-Xmx1024m" > java.opts
#     - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch ee, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end "; 
#   only:
#     - master

unit:R2013b:
  stage: unit
  script: 
    - module unload matlab
    - module load matlab/2013b
    - echo "-Xmx1024m" > java.opts
    - matlab -nodisplay -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCITests('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}', {'cached','${CI_PROJECT_DIR}/mathfun/test','${CI_PROJECT_DIR}/toolfun/test', '${CI_PROJECT_DIR}/toolfun/movieManagement/test/unit','${CI_PROJECT_DIR}/toolfun/movieManagement/test/integration'}, '-verbose'); exit(0);, catch ee, warning('[MATLAB] !!!MATLAB CI SCRIPT ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end "; 
 

# === Build Packages =======================  
build:utrack:
  stage: build
  variables:
    PACKAGE_NAME:  "u-track"
    PACKAGE_CLASS: "TrackingPackage"
    BUILD_NAME: $PACKAGE_NAME
    DOCUMENTATION_DIR: "$USER_HOME/matlab/xUnit/git/documentation"
    RELEASE: "2.1.4-DEV"
    TARGET_FOLDER: "target/${PACKAGE_NAME}"
  script:
    - module unload matlab
    - module load matlab/2016a
    - module load texlive/2014

    - echo "Cleaning ${CI_PROJECT_DIR}/$TARGET_FOLDER"
    - rm -rf ${CI_PROJECT_DIR}/$TARGET_FOLDER/

    - echo "Creating ${CI_PROJECT_DIR}/$TARGET_FOLDER/software"
    - mkdir -p ${CI_PROJECT_DIR}/$TARGET_FOLDER/software

    - echo "-Xmx1024m" > java.opts
    - matlab -nodesktop -nosplash -r "try, restoredefaultpath; addpath('${CI_SCRIPT_PATH}'); runCIbuildPackage('${CLEAN_REPO_PATH}', '${CI_PROJECT_DIR}','$PACKAGE_CLASS','${CI_PROJECT_DIR}/$TARGET_FOLDER/software'); exit(0);, catch ee, warning('[MATLAB] !!!MATLAB CI BUILD PACKAGE ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end "; 

    - echo "# Add license headers to functions"
    - cp $DOCUMENTATION_DIR/license/addCopyingStatement ${CI_PROJECT_DIR}/$TARGET_FOLDER/software
    - cp $DOCUMENTATION_DIR/license/CopyingStatement ${CI_PROJECT_DIR}/$TARGET_FOLDER/software
    - (cd ${CI_PROJECT_DIR}/$TARGET_FOLDER/software && bash addCopyingStatement u-track)
    - rm -v ${CI_PROJECT_DIR}/$TARGET_FOLDER/software/*CopyingStatement

    - echo "# Copy GPL license"
    - cp $DOCUMENTATION_DIR/license/GPL-License.txt ${CI_PROJECT_DIR}/$TARGET_FOLDER/

    - echo "# Build package documentation"
    - (cd $DOCUMENTATION_DIR && make clean latexpdf)
    - cp $DOCUMENTATION_DIR/_build/latex/u-track-*.pdf $TARGET_FOLDER/Readme_u-track.pdf

  dependencies:
    - unit:R2016a
  #   - unit:R2015b
  #   - unit:R2015a
  #   - unit:R2014b
  #   - unit:R2014a
    # - unit:R2013b
  artifacts:
    name: "${BUILD_NAME}-b${CI_BUILD_ID}"
    paths:
      - $TARGET_FOLDER
    when: on_success
    expire_in: 3 months
  only:
    - master
    # - testing
    # - CI_test 

# === Test Packages =======================  
test:utrack:R2016a:
  stage: test
  variables:
    TEST_DATA_LOCATION: 'https://lamella.biohpc.swmed.edu/index.php/s/1HBBq4bUzVlUFZn/download'
    BUILT_PACKAGE_PATH: "${CI_PROJECT_DIR}/target/u-track/"
    TEST_M_FILE_NAME: "utrack_build_test"
    MATLAB_TEST_SCRIPT: "${CI_SCRIPT_PATH}/automatedTests/${TEST_M_FILE_NAME}.m"
  script:
    - cp ${MATLAB_TEST_SCRIPT} ${BUILT_PACKAGE_PATH}
    - ls -R ${BUILT_PACKAGE_PATH}
    - matlab -nodesktop -nosplash -r "try, restoredefaultpath; cd('${BUILT_PACKAGE_PATH}'); addpath(genpath('${BUILT_PACKAGE_PATH}')); ${TEST_M_FILE_NAME}; exit(0);, catch ee, warning('[MATLAB] !!!MATLAB TEST STAGE ERROR!!!'); display(getReport(ee, 'extended')); exit(2); end "; 
    
  dependencies:
    - build:u-track




# === Documentation Generation Alone ======================= 
# doc:pdf_utrack:
#   stage: doc
#   variables:
#     # USER_HOME: "/home2/s170480"
#     DOCUMENTATION_DIR: "$USER_HOME/matlab/xUnit/git/documentation"
#     TARGET_FOLDER: "pdfdoc"
#     PACKAGE_NAME:  "u-track"
#     PACKAGE_CLASS: "TrackingPackage"
#     BUILD_NAME: $PACKAGE_NAME
#     RELEASE: "2.1.4-DEV"
#   script: 
#     - module load texlive/2014
#     - echo "# Build package documentation pdfs"
#     - mkdir -p ${CI_PROJECT_DIR}/$TARGET_FOLDER/
#     - (cd $DOCUMENTATION_DIR && make clean latexpdf)
#     - cp $DOCUMENTATION_DIR/_build/latex/u-track-*.pdf $TARGET_FOLDER/Readme_u-track-$RELEASE.pdf
#   artifacts:
#     name: "${BUILD_NAME}-${RELEASE}_b${CI_BUILD_ID}.pdf"
#     paths:
#       - $TARGET_FOLDER/Readme_u-track.pdf
#   only:
#     - master
#     - CI_test